#include <iostream>
#include <algorithm>
#include <cstring>
#include <string>

using namespace std;

int F[10][10];
int v[10];
int w[10];

int c[10];

void knapsack(int n, int m)
{
	for (int i = 0; i < n; i++){
		for (int j = 0; j <= m; j++){
			if (j < w[i])
				F[i + 1][j] = F[i][j];
			else
				F[i + 1][j] = max(F[i][j], F[i][j - w[i]] + v[i]);		
		}
	}
}

void knapsack2(int n, int m)			//使用一维数组，从后往前推
{
	for (int i = 0; i < n; i++){
		for (int j = m; j - w[i] >= 0; j--){
			c[j] = max(c[j], c[j - w[i]] + v[i]);
		}
	}

}

int main()
{
	int n, m;
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		cin >> v[i];
	for (int i = 0; i < n; i++)
		cin >> w[i];

	knapsack2(n, m);
	cout << c[m];

	system("pause");

}
