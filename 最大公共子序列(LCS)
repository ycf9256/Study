#include <iostream>
#include <algorithm>
#include <cstring>
#include <string>

using namespace std;

char F[10][10];

int V1(string X, string Y)
{
	int len1 = X.length();
	int len2 = Y.length();
	char c1[11], c2[11];
	memset(c1, 0, sizeof(c1));
	memset(c2, 0, sizeof(c2));
	
	for (int i = 0; i < len1; i++)
		c1[i + 1] = X.at(i);
	for (int j = 0; j < len2; j++)
		c2[j + 1] = Y.at(j);

	for (int i = 1; i <= len1; i++){
		for (int j = 1; j <= len2; j++){
			if (c1[i] == c2[j])
				F[i][j] = F[i - 1][j - 1] + 1;
			else {
				if (F[i][j - 1]>F[i - 1][j])
					F[i][j] = F[i][j - 1];
				else
					F[i][j] = F[i - 1][j];
			}
		}
	}
	return F[len1][len2];
}

//使用一维数组
int F1[10];
int V2(string X, string Y)
{
	int len1 = X.length();
	int len2 = Y.length();
	char c1[11], c2[11];
	memset(c1, 0, sizeof(c1));
	memset(c2, 0, sizeof(c2));

	for (int i = 0; i < len1; i++)
		c1[i + 1] = X.at(i);
	for (int j = 0; j < len2; j++)
		c2[j + 1] = Y.at(j);

	for (int i = 1; i <= len1; i++){
		for (int j = 1; j <= len2; j++){
			if (c1[i] == c2[j])
				F1[j] = F1[j - 1] + 1;
			else{
				if (F1[j - 1]>F1[j])
					F1[j] = F1[j - 1];
			}

		}
	}
	return F1[len2];
}


int main()
{
	string X, Y;
	cin >> X >> Y;
	
	cout << V1(X, Y) << endl;
	cout << V2(X, Y);
	system("pause");

}
